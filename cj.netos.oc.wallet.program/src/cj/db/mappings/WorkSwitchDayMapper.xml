<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cj.netos.oc.wallet.mapper.WorkSwitchDayMapper">
  <resultMap id="BaseResultMap" type="cj.netos.oc.wallet.model.WorkSwitchDay">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="work_day" jdbcType="VARCHAR" property="workDay" />
    <result column="pre_amount" jdbcType="BIGINT" property="preAmount" />
    <result column="unckeck_amount" jdbcType="BIGINT" property="unckeckAmount" />
    <result column="checked_amount" jdbcType="BIGINT" property="checkedAmount" />
    <result column="pre_freezen_amount" jdbcType="BIGINT" property="preFreezenAmount" />
    <result column="unckeck_freezen_amount" jdbcType="BIGINT" property="unckeckFreezenAmount" />
    <result column="checked_freezen_amount" jdbcType="BIGINT" property="checkedFreezenAmount" />
    <result column="pre_profit_amount" jdbcType="BIGINT" property="preProfitAmount" />
    <result column="unckech_profit_amount" jdbcType="BIGINT" property="unckechProfitAmount" />
    <result column="checked_profit_amount" jdbcType="BIGINT" property="checkedProfitAmount" />
    <result column="pre_yinj_amount" jdbcType="BIGINT" property="preYinjAmount" />
    <result column="uncheck_yinj_amount" jdbcType="BIGINT" property="uncheckYinjAmount" />
    <result column="checked_yinj_amount" jdbcType="BIGINT" property="checkedYinjAmount" />
    <result column="pre_weny_quantities" jdbcType="DECIMAL" property="preWenyQuantities" />
    <result column="unckeck_weny_quatities" jdbcType="DECIMAL" property="unckeckWenyQuatities" />
    <result column="checked_weny_quantities" jdbcType="DECIMAL" property="checkedWenyQuantities" />
    <result column="day_switch_state" jdbcType="INTEGER" property="daySwitchState" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    id, work_day, pre_amount, unckeck_amount, checked_amount, pre_freezen_amount, unckeck_freezen_amount, 
    checked_freezen_amount, pre_profit_amount, unckech_profit_amount, checked_profit_amount, 
    pre_yinj_amount, uncheck_yinj_amount, checked_yinj_amount, pre_weny_quantities, unckeck_weny_quatities, 
    checked_weny_quantities, day_switch_state, note
  </sql>
  <select id="selectByExample" parameterType="cj.netos.oc.wallet.model.WorkSwitchDayExample" resultMap="BaseResultMap">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from work_switch_day
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select 
    <include refid="Base_Column_List" />
    from work_switch_day
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    delete from work_switch_day
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cj.netos.oc.wallet.model.WorkSwitchDayExample">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    delete from work_switch_day
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cj.netos.oc.wallet.model.WorkSwitchDay">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    insert into work_switch_day (id, work_day, pre_amount, 
      unckeck_amount, checked_amount, pre_freezen_amount, 
      unckeck_freezen_amount, checked_freezen_amount, 
      pre_profit_amount, unckech_profit_amount, checked_profit_amount, 
      pre_yinj_amount, uncheck_yinj_amount, checked_yinj_amount, 
      pre_weny_quantities, unckeck_weny_quatities, 
      checked_weny_quantities, day_switch_state, 
      note)
    values (#{id,jdbcType=VARCHAR}, #{workDay,jdbcType=VARCHAR}, #{preAmount,jdbcType=BIGINT}, 
      #{unckeckAmount,jdbcType=BIGINT}, #{checkedAmount,jdbcType=BIGINT}, #{preFreezenAmount,jdbcType=BIGINT}, 
      #{unckeckFreezenAmount,jdbcType=BIGINT}, #{checkedFreezenAmount,jdbcType=BIGINT}, 
      #{preProfitAmount,jdbcType=BIGINT}, #{unckechProfitAmount,jdbcType=BIGINT}, #{checkedProfitAmount,jdbcType=BIGINT}, 
      #{preYinjAmount,jdbcType=BIGINT}, #{uncheckYinjAmount,jdbcType=BIGINT}, #{checkedYinjAmount,jdbcType=BIGINT}, 
      #{preWenyQuantities,jdbcType=DECIMAL}, #{unckeckWenyQuatities,jdbcType=DECIMAL}, 
      #{checkedWenyQuantities,jdbcType=DECIMAL}, #{daySwitchState,jdbcType=INTEGER}, 
      #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cj.netos.oc.wallet.model.WorkSwitchDay">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    insert into work_switch_day
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="workDay != null">
        work_day,
      </if>
      <if test="preAmount != null">
        pre_amount,
      </if>
      <if test="unckeckAmount != null">
        unckeck_amount,
      </if>
      <if test="checkedAmount != null">
        checked_amount,
      </if>
      <if test="preFreezenAmount != null">
        pre_freezen_amount,
      </if>
      <if test="unckeckFreezenAmount != null">
        unckeck_freezen_amount,
      </if>
      <if test="checkedFreezenAmount != null">
        checked_freezen_amount,
      </if>
      <if test="preProfitAmount != null">
        pre_profit_amount,
      </if>
      <if test="unckechProfitAmount != null">
        unckech_profit_amount,
      </if>
      <if test="checkedProfitAmount != null">
        checked_profit_amount,
      </if>
      <if test="preYinjAmount != null">
        pre_yinj_amount,
      </if>
      <if test="uncheckYinjAmount != null">
        uncheck_yinj_amount,
      </if>
      <if test="checkedYinjAmount != null">
        checked_yinj_amount,
      </if>
      <if test="preWenyQuantities != null">
        pre_weny_quantities,
      </if>
      <if test="unckeckWenyQuatities != null">
        unckeck_weny_quatities,
      </if>
      <if test="checkedWenyQuantities != null">
        checked_weny_quantities,
      </if>
      <if test="daySwitchState != null">
        day_switch_state,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="workDay != null">
        #{workDay,jdbcType=VARCHAR},
      </if>
      <if test="preAmount != null">
        #{preAmount,jdbcType=BIGINT},
      </if>
      <if test="unckeckAmount != null">
        #{unckeckAmount,jdbcType=BIGINT},
      </if>
      <if test="checkedAmount != null">
        #{checkedAmount,jdbcType=BIGINT},
      </if>
      <if test="preFreezenAmount != null">
        #{preFreezenAmount,jdbcType=BIGINT},
      </if>
      <if test="unckeckFreezenAmount != null">
        #{unckeckFreezenAmount,jdbcType=BIGINT},
      </if>
      <if test="checkedFreezenAmount != null">
        #{checkedFreezenAmount,jdbcType=BIGINT},
      </if>
      <if test="preProfitAmount != null">
        #{preProfitAmount,jdbcType=BIGINT},
      </if>
      <if test="unckechProfitAmount != null">
        #{unckechProfitAmount,jdbcType=BIGINT},
      </if>
      <if test="checkedProfitAmount != null">
        #{checkedProfitAmount,jdbcType=BIGINT},
      </if>
      <if test="preYinjAmount != null">
        #{preYinjAmount,jdbcType=BIGINT},
      </if>
      <if test="uncheckYinjAmount != null">
        #{uncheckYinjAmount,jdbcType=BIGINT},
      </if>
      <if test="checkedYinjAmount != null">
        #{checkedYinjAmount,jdbcType=BIGINT},
      </if>
      <if test="preWenyQuantities != null">
        #{preWenyQuantities,jdbcType=DECIMAL},
      </if>
      <if test="unckeckWenyQuatities != null">
        #{unckeckWenyQuatities,jdbcType=DECIMAL},
      </if>
      <if test="checkedWenyQuantities != null">
        #{checkedWenyQuantities,jdbcType=DECIMAL},
      </if>
      <if test="daySwitchState != null">
        #{daySwitchState,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cj.netos.oc.wallet.model.WorkSwitchDayExample" resultType="java.lang.Long">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select count(*) from work_switch_day
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update work_switch_day
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.workDay != null">
        work_day = #{record.workDay,jdbcType=VARCHAR},
      </if>
      <if test="record.preAmount != null">
        pre_amount = #{record.preAmount,jdbcType=BIGINT},
      </if>
      <if test="record.unckeckAmount != null">
        unckeck_amount = #{record.unckeckAmount,jdbcType=BIGINT},
      </if>
      <if test="record.checkedAmount != null">
        checked_amount = #{record.checkedAmount,jdbcType=BIGINT},
      </if>
      <if test="record.preFreezenAmount != null">
        pre_freezen_amount = #{record.preFreezenAmount,jdbcType=BIGINT},
      </if>
      <if test="record.unckeckFreezenAmount != null">
        unckeck_freezen_amount = #{record.unckeckFreezenAmount,jdbcType=BIGINT},
      </if>
      <if test="record.checkedFreezenAmount != null">
        checked_freezen_amount = #{record.checkedFreezenAmount,jdbcType=BIGINT},
      </if>
      <if test="record.preProfitAmount != null">
        pre_profit_amount = #{record.preProfitAmount,jdbcType=BIGINT},
      </if>
      <if test="record.unckechProfitAmount != null">
        unckech_profit_amount = #{record.unckechProfitAmount,jdbcType=BIGINT},
      </if>
      <if test="record.checkedProfitAmount != null">
        checked_profit_amount = #{record.checkedProfitAmount,jdbcType=BIGINT},
      </if>
      <if test="record.preYinjAmount != null">
        pre_yinj_amount = #{record.preYinjAmount,jdbcType=BIGINT},
      </if>
      <if test="record.uncheckYinjAmount != null">
        uncheck_yinj_amount = #{record.uncheckYinjAmount,jdbcType=BIGINT},
      </if>
      <if test="record.checkedYinjAmount != null">
        checked_yinj_amount = #{record.checkedYinjAmount,jdbcType=BIGINT},
      </if>
      <if test="record.preWenyQuantities != null">
        pre_weny_quantities = #{record.preWenyQuantities,jdbcType=DECIMAL},
      </if>
      <if test="record.unckeckWenyQuatities != null">
        unckeck_weny_quatities = #{record.unckeckWenyQuatities,jdbcType=DECIMAL},
      </if>
      <if test="record.checkedWenyQuantities != null">
        checked_weny_quantities = #{record.checkedWenyQuantities,jdbcType=DECIMAL},
      </if>
      <if test="record.daySwitchState != null">
        day_switch_state = #{record.daySwitchState,jdbcType=INTEGER},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update work_switch_day
    set id = #{record.id,jdbcType=VARCHAR},
      work_day = #{record.workDay,jdbcType=VARCHAR},
      pre_amount = #{record.preAmount,jdbcType=BIGINT},
      unckeck_amount = #{record.unckeckAmount,jdbcType=BIGINT},
      checked_amount = #{record.checkedAmount,jdbcType=BIGINT},
      pre_freezen_amount = #{record.preFreezenAmount,jdbcType=BIGINT},
      unckeck_freezen_amount = #{record.unckeckFreezenAmount,jdbcType=BIGINT},
      checked_freezen_amount = #{record.checkedFreezenAmount,jdbcType=BIGINT},
      pre_profit_amount = #{record.preProfitAmount,jdbcType=BIGINT},
      unckech_profit_amount = #{record.unckechProfitAmount,jdbcType=BIGINT},
      checked_profit_amount = #{record.checkedProfitAmount,jdbcType=BIGINT},
      pre_yinj_amount = #{record.preYinjAmount,jdbcType=BIGINT},
      uncheck_yinj_amount = #{record.uncheckYinjAmount,jdbcType=BIGINT},
      checked_yinj_amount = #{record.checkedYinjAmount,jdbcType=BIGINT},
      pre_weny_quantities = #{record.preWenyQuantities,jdbcType=DECIMAL},
      unckeck_weny_quatities = #{record.unckeckWenyQuatities,jdbcType=DECIMAL},
      checked_weny_quantities = #{record.checkedWenyQuantities,jdbcType=DECIMAL},
      day_switch_state = #{record.daySwitchState,jdbcType=INTEGER},
      note = #{record.note,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cj.netos.oc.wallet.model.WorkSwitchDay">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update work_switch_day
    <set>
      <if test="workDay != null">
        work_day = #{workDay,jdbcType=VARCHAR},
      </if>
      <if test="preAmount != null">
        pre_amount = #{preAmount,jdbcType=BIGINT},
      </if>
      <if test="unckeckAmount != null">
        unckeck_amount = #{unckeckAmount,jdbcType=BIGINT},
      </if>
      <if test="checkedAmount != null">
        checked_amount = #{checkedAmount,jdbcType=BIGINT},
      </if>
      <if test="preFreezenAmount != null">
        pre_freezen_amount = #{preFreezenAmount,jdbcType=BIGINT},
      </if>
      <if test="unckeckFreezenAmount != null">
        unckeck_freezen_amount = #{unckeckFreezenAmount,jdbcType=BIGINT},
      </if>
      <if test="checkedFreezenAmount != null">
        checked_freezen_amount = #{checkedFreezenAmount,jdbcType=BIGINT},
      </if>
      <if test="preProfitAmount != null">
        pre_profit_amount = #{preProfitAmount,jdbcType=BIGINT},
      </if>
      <if test="unckechProfitAmount != null">
        unckech_profit_amount = #{unckechProfitAmount,jdbcType=BIGINT},
      </if>
      <if test="checkedProfitAmount != null">
        checked_profit_amount = #{checkedProfitAmount,jdbcType=BIGINT},
      </if>
      <if test="preYinjAmount != null">
        pre_yinj_amount = #{preYinjAmount,jdbcType=BIGINT},
      </if>
      <if test="uncheckYinjAmount != null">
        uncheck_yinj_amount = #{uncheckYinjAmount,jdbcType=BIGINT},
      </if>
      <if test="checkedYinjAmount != null">
        checked_yinj_amount = #{checkedYinjAmount,jdbcType=BIGINT},
      </if>
      <if test="preWenyQuantities != null">
        pre_weny_quantities = #{preWenyQuantities,jdbcType=DECIMAL},
      </if>
      <if test="unckeckWenyQuatities != null">
        unckeck_weny_quatities = #{unckeckWenyQuatities,jdbcType=DECIMAL},
      </if>
      <if test="checkedWenyQuantities != null">
        checked_weny_quantities = #{checkedWenyQuantities,jdbcType=DECIMAL},
      </if>
      <if test="daySwitchState != null">
        day_switch_state = #{daySwitchState,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cj.netos.oc.wallet.model.WorkSwitchDay">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update work_switch_day
    set work_day = #{workDay,jdbcType=VARCHAR},
      pre_amount = #{preAmount,jdbcType=BIGINT},
      unckeck_amount = #{unckeckAmount,jdbcType=BIGINT},
      checked_amount = #{checkedAmount,jdbcType=BIGINT},
      pre_freezen_amount = #{preFreezenAmount,jdbcType=BIGINT},
      unckeck_freezen_amount = #{unckeckFreezenAmount,jdbcType=BIGINT},
      checked_freezen_amount = #{checkedFreezenAmount,jdbcType=BIGINT},
      pre_profit_amount = #{preProfitAmount,jdbcType=BIGINT},
      unckech_profit_amount = #{unckechProfitAmount,jdbcType=BIGINT},
      checked_profit_amount = #{checkedProfitAmount,jdbcType=BIGINT},
      pre_yinj_amount = #{preYinjAmount,jdbcType=BIGINT},
      uncheck_yinj_amount = #{uncheckYinjAmount,jdbcType=BIGINT},
      checked_yinj_amount = #{checkedYinjAmount,jdbcType=BIGINT},
      pre_weny_quantities = #{preWenyQuantities,jdbcType=DECIMAL},
      unckeck_weny_quatities = #{unckeckWenyQuatities,jdbcType=DECIMAL},
      checked_weny_quantities = #{checkedWenyQuantities,jdbcType=DECIMAL},
      day_switch_state = #{daySwitchState,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>