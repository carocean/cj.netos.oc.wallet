<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cj.netos.oc.wallet.mapper.RootAccountMapper">
  <resultMap id="BaseResultMap" type="cj.netos.oc.wallet.model.RootAccount">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="person" jdbcType="VARCHAR" property="person" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="person_name" jdbcType="VARCHAR" property="personName" />
    <result column="is_real_name" jdbcType="INTEGER" property="isRealName" />
    <result column="property" jdbcType="INTEGER" property="property" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="ctime" jdbcType="VARCHAR" property="ctime" />
    <result column="lutime" jdbcType="VARCHAR" property="lutime" />
    <result column="sign_value" jdbcType="VARCHAR" property="signValue" />
    <result column="onorder_amount" jdbcType="BIGINT" property="onorderAmount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    id, person, phone, person_name, is_real_name, property, `state`, ctime, lutime, sign_value, 
    onorder_amount
  </sql>
  <select id="selectByExample" parameterType="cj.netos.oc.wallet.model.RootAccountExample" resultMap="BaseResultMap">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from root_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select 
    <include refid="Base_Column_List" />
    from root_account
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    delete from root_account
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cj.netos.oc.wallet.model.RootAccountExample">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    delete from root_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cj.netos.oc.wallet.model.RootAccount">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    insert into root_account (id, person, phone, 
      person_name, is_real_name, property, 
      `state`, ctime, lutime, 
      sign_value, onorder_amount)
    values (#{id,jdbcType=VARCHAR}, #{person,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{personName,jdbcType=VARCHAR}, #{isRealName,jdbcType=INTEGER}, #{property,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{ctime,jdbcType=VARCHAR}, #{lutime,jdbcType=VARCHAR}, 
      #{signValue,jdbcType=VARCHAR}, #{onorderAmount,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="cj.netos.oc.wallet.model.RootAccount">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    insert into root_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="person != null">
        person,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="personName != null">
        person_name,
      </if>
      <if test="isRealName != null">
        is_real_name,
      </if>
      <if test="property != null">
        property,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="lutime != null">
        lutime,
      </if>
      <if test="signValue != null">
        sign_value,
      </if>
      <if test="onorderAmount != null">
        onorder_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="person != null">
        #{person,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="personName != null">
        #{personName,jdbcType=VARCHAR},
      </if>
      <if test="isRealName != null">
        #{isRealName,jdbcType=INTEGER},
      </if>
      <if test="property != null">
        #{property,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=VARCHAR},
      </if>
      <if test="lutime != null">
        #{lutime,jdbcType=VARCHAR},
      </if>
      <if test="signValue != null">
        #{signValue,jdbcType=VARCHAR},
      </if>
      <if test="onorderAmount != null">
        #{onorderAmount,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cj.netos.oc.wallet.model.RootAccountExample" resultType="java.lang.Long">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select count(*) from root_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update root_account
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.person != null">
        person = #{record.person,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.personName != null">
        person_name = #{record.personName,jdbcType=VARCHAR},
      </if>
      <if test="record.isRealName != null">
        is_real_name = #{record.isRealName,jdbcType=INTEGER},
      </if>
      <if test="record.property != null">
        property = #{record.property,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        `state` = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.ctime != null">
        ctime = #{record.ctime,jdbcType=VARCHAR},
      </if>
      <if test="record.lutime != null">
        lutime = #{record.lutime,jdbcType=VARCHAR},
      </if>
      <if test="record.signValue != null">
        sign_value = #{record.signValue,jdbcType=VARCHAR},
      </if>
      <if test="record.onorderAmount != null">
        onorder_amount = #{record.onorderAmount,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update root_account
    set id = #{record.id,jdbcType=VARCHAR},
      person = #{record.person,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      person_name = #{record.personName,jdbcType=VARCHAR},
      is_real_name = #{record.isRealName,jdbcType=INTEGER},
      property = #{record.property,jdbcType=INTEGER},
      `state` = #{record.state,jdbcType=INTEGER},
      ctime = #{record.ctime,jdbcType=VARCHAR},
      lutime = #{record.lutime,jdbcType=VARCHAR},
      sign_value = #{record.signValue,jdbcType=VARCHAR},
      onorder_amount = #{record.onorderAmount,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cj.netos.oc.wallet.model.RootAccount">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update root_account
    <set>
      <if test="person != null">
        person = #{person,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="personName != null">
        person_name = #{personName,jdbcType=VARCHAR},
      </if>
      <if test="isRealName != null">
        is_real_name = #{isRealName,jdbcType=INTEGER},
      </if>
      <if test="property != null">
        property = #{property,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=INTEGER},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=VARCHAR},
      </if>
      <if test="lutime != null">
        lutime = #{lutime,jdbcType=VARCHAR},
      </if>
      <if test="signValue != null">
        sign_value = #{signValue,jdbcType=VARCHAR},
      </if>
      <if test="onorderAmount != null">
        onorder_amount = #{onorderAmount,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cj.netos.oc.wallet.model.RootAccount">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update root_account
    set person = #{person,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      person_name = #{personName,jdbcType=VARCHAR},
      is_real_name = #{isRealName,jdbcType=INTEGER},
      property = #{property,jdbcType=INTEGER},
      `state` = #{state,jdbcType=INTEGER},
      ctime = #{ctime,jdbcType=VARCHAR},
      lutime = #{lutime,jdbcType=VARCHAR},
      sign_value = #{signValue,jdbcType=VARCHAR},
      onorder_amount = #{onorderAmount,jdbcType=BIGINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>